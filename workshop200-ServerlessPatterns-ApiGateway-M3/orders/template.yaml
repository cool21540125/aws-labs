AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for orders

Globals:
  Api:
    TracingEnabled: true
  Function:
    Runtime: python3.12
    MemorySize: 128
    Timeout: 100
    Tracing: Active
    Architectures:
      - arm64

Parameters:
  UserPool:
    Type: String
    Description: User Pool ID produced by the Users module

Resources: 
  OrdersTable:  # DynamoDB
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
        - AttributeName: "orderId"
          AttributeType: "S"
      KeySchema:  # Orders 的 Primary Key 為 userId + orderId
        - AttributeName: "userId"  # Partition Key
          KeyType: "HASH"
        - AttributeName: "orderId"  # Sort Key
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  WorkshopApiGateway:  # Defines the API Gateway
    Type: AWS::Serverless::Api 
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: Module3CognitoAuthorizer
        Authorizers:
          Module3CognitoAuthorizer:  # Sets Cognito user pool as default authorizer for API requests
            UserPoolArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}"  # 來自於 root stack 拋進來的參數

  AddOrderFunction:  # LambdaFN - create_order
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/api/order/create
      Handler: create_order.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref OrdersTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders
            Method: post
            RestApiId: !Ref WorkshopApiGateway

  GetOrderFunction:  # LambdaFN - get_order
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/api/order/get
      Handler: get_order.lambda_handler
      Runtime: python3.12
      Tracing: Active
      Policies:
        DynamoDBReadPolicy:
          TableName: !Ref OrdersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref OrdersTable
      Layers:
        - !Ref PyUtils
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /orders/{orderId}
            Method: get
            RestApiId: !Ref WorkshopApiGateway

  PyUtils:  # LambdaFN Layer - get_order
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: pyutils
        Description: Shared utilities for Orders service 
        ContentUri: src/layers
        CompatibleRuntimes:
          - python3.12
        RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.12

Outputs:
  OrdersServiceEndpoint:  # Returns the API URL
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${WorkshopApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  OrdersTable:
    Description: "DynamoDb Orders Table"
    Value: !Ref OrdersTable